CREATE TABLE word (
    word TEXT PRIMARY KEY,
    top INTEGER NOT NULL DEFAULT 0
);

-- Tabela dos URLs
CREATE TABLE urls (
    url TEXT PRIMARY KEY,
    ranking INTEGER NOT NULL DEFAULT 0,
    titulo TEXT NOT NULL,
    citacao TEXT NOT NULL
);

-- Relação entre palavras e URLs (frequência de cada palavra num URL)
CREATE TABLE word_url (
    word TEXT NOT NULL,
    url TEXT NOT NULL,
    frequency INTEGER NOT NULL,
    PRIMARY KEY (word, url),
    FOREIGN KEY (word) REFERENCES word(word) ON DELETE CASCADE,
    FOREIGN KEY (url) REFERENCES urls(url) ON DELETE CASCADE
);

-- Ligações entre URLs
CREATE TABLE url_links (
    from_url TEXT NOT NULL,
    to_url TEXT NOT NULL,
    PRIMARY KEY (from_url, to_url),
    FOREIGN KEY (from_url) REFERENCES urls(url) ON DELETE CASCADE,
    FOREIGN KEY (to_url) REFERENCES urls(url) ON DELETE CASCADE
);

-- Trigger para atualizar o ranking após inserção de um link
CREATE TRIGGER trg_update_ranking_insert
AFTER INSERT ON url_links
BEGIN
    UPDATE urls
    SET ranking = (
        SELECT COUNT(*)
        FROM url_links
        WHERE to_url = NEW.to_url
    )
    WHERE url = NEW.to_url;
END;

-- Trigger para atualizar o ranking após remoção de um link
CREATE TRIGGER trg_update_ranking_delete
AFTER DELETE ON url_links
BEGIN
    UPDATE urls
    SET ranking = (
        SELECT COUNT(*)
        FROM url_links
        WHERE to_url = OLD.to_url
    )
    WHERE url = OLD.to_url;
END;